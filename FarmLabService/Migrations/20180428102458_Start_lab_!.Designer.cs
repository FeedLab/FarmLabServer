// <auto-generated />
using System;
using FarmLabService.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;

namespace FarmLabService.Migrations
{
    [DbContext(typeof(FarmLabContext))]
    [Migration("20180428102458_Start_lab_!")]
    partial class Start_lab_
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FarmLabService.DataObjects.FarmItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<Guid>("ExternalFarmReference");

                    b.Property<DateTime>("TimeCreate");

                    b.Property<DateTime>("TimeModify");

                    b.HasKey("Id");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("FarmLabService.DataObjects.SessionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FK_Session_BelongToUser")
                        .IsRequired();

                    b.Property<bool>("IsValid");

                    b.Property<DateTime>("LastActivity");

                    b.Property<Guid>("SessionKey");

                    b.HasKey("Id");

                    b.HasIndex("FK_Session_BelongToUser");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("FarmLabService.DataObjects.UserItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("FK_User_ActiveSession");

                    b.Property<int?>("FarmId");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsConfirmedByMail");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("LastName");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("RoleType");

                    b.Property<DateTime>("TimeCreate");

                    b.Property<DateTime>("TimeModify");

                    b.HasKey("Id");

                    b.HasIndex("FK_User_ActiveSession");

                    b.HasIndex("FarmId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FarmLabService.DataObjects.SessionItem", b =>
                {
                    b.HasOne("FarmLabService.DataObjects.UserItem", "User")
                        .WithMany()
                        .HasForeignKey("FK_Session_BelongToUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FarmLabService.DataObjects.UserItem", b =>
                {
                    b.HasOne("FarmLabService.DataObjects.SessionItem", "ActiveSession")
                        .WithMany()
                        .HasForeignKey("FK_User_ActiveSession");

                    b.HasOne("FarmLabService.DataObjects.FarmItem", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId");
                });
#pragma warning restore 612, 618
        }
    }
}
